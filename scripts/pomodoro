#!/usr/bin/env ruby

# frozen_string_literal: true

require 'optparse'

COMPLETION_NOTIFICATION =
  'display notification "â˜•" with title "Work Timer is up!" subtitle "Take a Break ðŸ˜Š" sound name "Crystal"'

def log_pomodoro
  system('log_pomodoro', options.task, options.duration, options.block_sites.to_s)
end

def options
  return @options if defined? @options

  @options = Struct.new(:block_sites, :duration, :task, :log, keyword_init: true)
                   .new(block_sites: false, log: false)

  OptionParser.new do |opts|
    opts.banner = 'Usage: pomodoro <duration> <task> [options]'
    opts.on('-b', 'Enable site blocking') do
      @options.block_sites = true
    end
    opts.on('-B', 'Disable site blocking (default)') do
      @options.block_sites = false
    end
    opts.on('-l', 'Enable logging') do
      @options.log = true
    end
    opts.on('-L', 'Disable logging (default)') do
      @options.log = false
    end
  end.parse!

  abort 'Duration and task required' if ARGV.length != 2
  @options.duration = ARGV[0]
  @options.task = ARGV[1]

  @options
end

def main
  system('self-control', options.duration) if options.block_sites

  if system('timer', options.duration, '-n', options.task)
    log_pomodoro if options.log
    system('osascript', '-e', COMPLETION_NOTIFICATION)
  else
    abort 'Timer failed'
  end
end

main
